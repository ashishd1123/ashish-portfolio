{"ast":null,"code":"// import i18n from \"i18next\";\n// import Backend from \"i18next-http-backend\";\n// import LanguageDetector from \"i18next-browser-languagedetector\";\n// import { initReactI18next } from \"react-i18next\";\n\n// i18n.use(Backend)\n// \t.use(LanguageDetector)\n// \t.use(initReactI18next)\n// \t.init({\n// \t\tbackend: {\n// \t\t\t// translation file path\n// \t\t\tloadPath: \"/assets/i18n/{{ns}}/{{lng}}.json\",\n// \t\t},\n// \t\tfallbackLng: \"en\",\n// \t\t// disabled in production\n// \t\tdebug: false,\n// \t\t// can have multiple namespaces, in case you want to divide a huge\n// \t\t// translation into smaller pieces and load them on demand\n// \t\tns: [\"About\"],\n\n// \t\tinterpolation: {\n// \t\t\tespaceValue: false,\n// \t\t\tformatSeparator: \",\",\n// \t\t},\n// \t\treact: {\n// \t\t\twait: true,\n// \t\t},\n// \t});\n\n// export default i18n;\n\n// import i18n from \"i18next\";\n// import { initReactI18next } from \"react-i18next\";\n// import Backend from \"i18next-http-backend\";\n// import LanguageDetector from \"i18next-browser-languagedetector\";\n\n// i18n\n//   .use(initReactI18next)\n//   .use(Backend) // loads translations from /public/locales/{{lng}}/translation.json\n//   .use(LanguageDetector) // ðŸ”¥ detects language from localStorage, cookies, browser\n//   .init({\n//     fallbackLng: \"en\",\n//     supportedLngs: [\"en\"],\n//     load: \"languageOnly\",\n//     debug: true,\n//     interpolation: {\n//       escapeValue: false,\n//     },\n//     backend: {\n//        ns: [\"translation\"],\n//        loadPath: \"/assets/i18n/{{ns}}/{{lng}}.json\",\n//     },\n//     detection: {\n//       // ðŸ‘‡ detection order\n//       order: [\"localStorage\", \"cookie\", \"navigator\", \"htmlTag\", \"path\", \"subdomain\"],\n//       caches: [\"localStorage\"], // store user language in localStorage\n//     },\n//   });\n\n// export default i18n;\n\nimport i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport Backend from \"i18next-http-backend\";\n// import LanguageDetector from \"i18next-browser-languagedetector\";\n\ni18n.use(initReactI18next).use(Backend) // loads translations from /public/locales/{{lng}}/translation.json\n//   .use(LanguageDetector) // ðŸ”¥ detects language from localStorage, cookies, browser\n.init({\n  lng: \"en\",\n  fallbackLng: \"en\",\n  load: \"languageOnly\",\n  debug: true,\n  interpolation: {\n    escapeValue: false\n  },\n  backend: {\n    ns: [\"translation\"],\n    loadPath: \"/locales/{{lng}}/translation.json\"\n  },\n  detection: {\n    // ðŸ‘‡ detection order\n    order: [\"localStorage\", \"cookie\", \"navigator\", \"htmlTag\", \"path\", \"subdomain\"],\n    caches: [\"localStorage\"] // store user language in localStorage\n  }\n});\nexport default i18n;","map":{"version":3,"names":["i18n","initReactI18next","Backend","use","init","lng","fallbackLng","load","debug","interpolation","escapeValue","backend","ns","loadPath","detection","order","caches"],"sources":["/Users/ashishd@backbase.com/Documents/6478/DOCS/ashish-portfolio/src/i18n.js"],"sourcesContent":["// import i18n from \"i18next\";\n// import Backend from \"i18next-http-backend\";\n// import LanguageDetector from \"i18next-browser-languagedetector\";\n// import { initReactI18next } from \"react-i18next\";\n\n// i18n.use(Backend)\n// \t.use(LanguageDetector)\n// \t.use(initReactI18next)\n// \t.init({\n// \t\tbackend: {\n// \t\t\t// translation file path\n// \t\t\tloadPath: \"/assets/i18n/{{ns}}/{{lng}}.json\",\n// \t\t},\n// \t\tfallbackLng: \"en\",\n// \t\t// disabled in production\n// \t\tdebug: false,\n// \t\t// can have multiple namespaces, in case you want to divide a huge\n// \t\t// translation into smaller pieces and load them on demand\n// \t\tns: [\"About\"],\n\n// \t\tinterpolation: {\n// \t\t\tespaceValue: false,\n// \t\t\tformatSeparator: \",\",\n// \t\t},\n// \t\treact: {\n// \t\t\twait: true,\n// \t\t},\n// \t});\n\n// export default i18n;\n\n// import i18n from \"i18next\";\n// import { initReactI18next } from \"react-i18next\";\n// import Backend from \"i18next-http-backend\";\n// import LanguageDetector from \"i18next-browser-languagedetector\";\n\n// i18n\n//   .use(initReactI18next)\n//   .use(Backend) // loads translations from /public/locales/{{lng}}/translation.json\n//   .use(LanguageDetector) // ðŸ”¥ detects language from localStorage, cookies, browser\n//   .init({\n//     fallbackLng: \"en\",\n//     supportedLngs: [\"en\"],\n//     load: \"languageOnly\",\n//     debug: true,\n//     interpolation: {\n//       escapeValue: false,\n//     },\n//     backend: {\n//        ns: [\"translation\"],\n//        loadPath: \"/assets/i18n/{{ns}}/{{lng}}.json\",\n//     },\n//     detection: {\n//       // ðŸ‘‡ detection order\n//       order: [\"localStorage\", \"cookie\", \"navigator\", \"htmlTag\", \"path\", \"subdomain\"],\n//       caches: [\"localStorage\"], // store user language in localStorage\n//     },\n//   });\n\n// export default i18n;\n\nimport i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport Backend from \"i18next-http-backend\";\n// import LanguageDetector from \"i18next-browser-languagedetector\";\n\ni18n\n  .use(initReactI18next)\n  .use(Backend) // loads translations from /public/locales/{{lng}}/translation.json\n//   .use(LanguageDetector) // ðŸ”¥ detects language from localStorage, cookies, browser\n  .init({\n\tlng: \"en\",\n    fallbackLng: \"en\",\n    load: \"languageOnly\",\n    debug: true,\n    interpolation: {\n      escapeValue: false,\n    },\n    backend: {\n       ns: [\"translation\"],\n       loadPath: \"/locales/{{lng}}/translation.json\"\n    },\n    detection: {\n      // ðŸ‘‡ detection order\n      order: [\"localStorage\", \"cookie\", \"navigator\", \"htmlTag\", \"path\", \"subdomain\"],\n      caches: [\"localStorage\"], // store user language in localStorage\n    },\n  });\n\nexport default i18n;"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,IAAI,MAAM,SAAS;AAC1B,SAASC,gBAAgB,QAAQ,eAAe;AAChD,OAAOC,OAAO,MAAM,sBAAsB;AAC1C;;AAEAF,IAAI,CACDG,GAAG,CAACF,gBAAgB,CAAC,CACrBE,GAAG,CAACD,OAAO,CAAC,CAAC;AAChB;AAAA,CACGE,IAAI,CAAC;EACPC,GAAG,EAAE,IAAI;EACNC,WAAW,EAAE,IAAI;EACjBC,IAAI,EAAE,cAAc;EACpBC,KAAK,EAAE,IAAI;EACXC,aAAa,EAAE;IACbC,WAAW,EAAE;EACf,CAAC;EACDC,OAAO,EAAE;IACNC,EAAE,EAAE,CAAC,aAAa,CAAC;IACnBC,QAAQ,EAAE;EACb,CAAC;EACDC,SAAS,EAAE;IACT;IACAC,KAAK,EAAE,CAAC,cAAc,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE,WAAW,CAAC;IAC9EC,MAAM,EAAE,CAAC,cAAc,CAAC,CAAE;EAC5B;AACF,CAAC,CAAC;AAEJ,eAAehB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}